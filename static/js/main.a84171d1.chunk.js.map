{"version":3,"sources":["test/DatabaseTester.js","store/actions/actionCreators.js","store/database/asynchHandler.js","components/header/LogOutLink.js","components/header/LoginLink.js","components/header/Header.js","components/login_screen/LoginScreen.js","components/home_screen/WireframeOption.js","components/edit_screen/controls/LabelControl.js","components/edit_screen/controls/TextFieldControl.js","components/edit_screen/controls/ButtonControl.js","components/edit_screen/controls/ContainerControl.js","components/edit_screen/controls/ControlGenerator.js","components/edit_screen/EditArea.js","components/home_screen/HomeScreen.js","components/register_screen/RegisterScreen.js","components/edit_screen/PropertyEditor.js","components/edit_screen/ControlSelection.js","components/edit_screen/EditScreen.js","App.js","serviceWorker.js","config/firebaseConfig.js","store/reducers/authReducer.js","store/reducers/todoListReducer.js","store/reducers/rootReducer.js","store/ReactReduxFirebaseApp.js","index.js"],"names":["DatabaseTester","handleClear","fireStore","getFirestore","collection","get","then","querySnapshot","forEach","doc","id","update","wireframes","handleReset","wireframeJson","this","props","profile","administrator","className","onClick","href","to","React","Component","connect","state","auth","firebase","registerSuccess","type","registerError","error","logoutSuccess","LogOutLink","handleLogout","signOut","initials","compose","firebaseConnect","dispatch","getState","actionCreators","logoutHandler","LoginLink","onLoginPage","window","location","includes","console","log","Header","links","uid","isAdmin","alignLinks","brand","menuIcon","center","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","LoginScreen","email","password","handleChange","e","target","setState","value","handleSubmit","preventDefault","authData","credentials","login","authError","icon","label","onChange","node","style","marginRight","waves","signInWithEmailAndPassword","catch","err","loginHandler","WireframeOption","default","key","wireframe","name","LabelControl","control","newPositionX","positionX","newPositionY","positionY","handleDragStop","data","x","y","handleResizeStop","dir","ref","delta","position","widthChange","width","heightChange","height","backgroundColor","borderWidth","borderThickness","borderRadius","borderStyle","borderColor","fontSize","textSize","onDragStop","onResizeStop","bounds","theChosenControl","parseInt","setControlBeingEdited","text","TextFieldControl","disabled","ButtonControl","small","ContainerControl","stop-propagation","ControlGenerator","EditArea","controlBeingEdited","updatable","updateDimensions","dimensionXinput","document","getElementById","dimensionYinput","newDimensionX","newDimensionY","dimensionX","dimensionY","makeUpdatable","preview","defaultValue","deselectControl","controls","map","HomeScreen","usersWireframes","moveToWireframe","wireframeSelected","refresh","randomAdjectives","handleNewWireframe","firestore","userID","userWireframes","Math","floor","random","length","push","lastAccessed","toast","handleSelectChange","wireframeName","M_FormSelect","input","getWireframeOfName","Date","toISOString","mostRecentWireframe","deleteWireframe","indexToRemove","i","splice","redirect","sort","item1","item2","fixKeys","EditAreaPreview","pathname","getUsersWireframes","reorderByAccessDate","classes","dropdownOptions","alignment","autoTrigger","closeOnClick","constrainWidth","container","coverTrigger","hover","right","header","trigger","actions","flat","firestoreConnect","RegisterScreen","firstName","lastName","newUser","register","createUserWithEmailAndPassword","resp","user","set","registerHandler","PropertyEditor","controlToEdit","handlePropertyChange","handleBackgroundColorChange","color","undefined","hex","handleBorderColorChange","setWhiteBackground","controlSelected","placeholder","ControlSelection","closing","closeWireframe","zoomIn","wireframeZone","getAttribute","setAttribute","zoomOut","large","saveData","createNewControl","EditScreen","wireframeControls","deleteControl","remove","body","onkeydown","ctrlKey","keyCode","duplicateControl","removeControl","controlToDuplicate","controlCopy","Object","assign","controlToRemove","configure","exact","path","component","Boolean","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initState","authReducer","action","message","todoLists","todoListReducer","rootReducer","combineReducers","todoList","firestoreReducer","firebaseReducer","ReactReduxFirebaseApp","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","rrfProps","config","useFirestoreForProfile","userProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a84171d1.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { getFirestore } from 'redux-firestore';\nimport wireframeJson from './WireframeTestData.json';\nimport { Redirect } from 'react-router-dom';\n\nclass DatabaseTester extends React.Component {\n\n    // NOTE, BY KEEPING THE DATABASE PUBLIC YOU CAN\n    // DO THIS ANY TIME YOU LIKE WITHOUT HAVING\n    // TO LOG IN\n    handleClear = () => {\n        const fireStore = getFirestore();\n        fireStore.collection('users').get().then(function(querySnapshot){\n            querySnapshot.forEach(function(doc) {\n                // Reset the wireframes of each account\n                    fireStore.collection('users').doc(doc.id).update({\n                        wireframes : []\n                    })\n            })\n        });\n    }\n\n    handleReset = () => {\n        const fireStore = getFirestore();\n        fireStore.collection('users').get().then(function(querySnapshot){\n            querySnapshot.forEach(function(doc) {\n                // Reset the wireframes of each account\n                    fireStore.collection('users').doc(doc.id).update({\n                        wireframes : wireframeJson.wireframes\n                    })\n            })\n        });\n    }\n\n    render() {\n        const {profile} = this.props;\n        const isAdmin = profile.administrator;\n        if (!isAdmin){\n            return <Redirect to=\"/\"/>;\n        }\n        return (\n            <div className = \"testDiv\">\n                <button className=\"testButton\" onClick={this.handleClear}>Clear Database</button>\n                <button className=\"testButton\" onClick={this.handleReset}>Reset Database</button>\n                <p><a href = \"https://console.firebase.google.com/u/0/project/wireframer-41732/database\">Link to my database.</a></p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        auth: state.firebase.auth,\n        firebase: state.firebase,\n        profile : state.firebase.profile\n    };\n}\n\nexport default connect(mapStateToProps)(DatabaseTester);","// THIS FILE KNOWS HOW TO MAKE ALL THE ACTION\n// OBJECDTS THAT WE WILL USE. ACTIONS ARE SIMPLE\n// LITTLE PACKAGES THAT REPRESENT SOME EVENT\n// THAT WILL BE DISPATCHED TO THE STORE, WHICH\n// WILL TRIGGER THE EXECUTION OF A CORRESPONDING\n// REDUCER, WHICH ADVANCES STATE\n\n// THESE ARE ALL THE TYPE OF ACTIONS WE'LL BE CREATING\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_ERROR = 'REGISTER_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\n\n// THESE CREATORS MAKE ACTIONS ASSOCIATED WITH USER ACCOUNTS\n\nexport function registerSuccess() {\n    return { type: 'REGISTER_SUCCESS' }\n};\nexport function registerError(error) { \n    return { type: 'REGISTER_ERROR', error }\n};\nexport function loginSuccess() {\n    return { type: 'LOGIN_SUCCESS' }\n};\nexport function loginError(error) {\n    return { type: 'LOGIN_ERROR', error }\n};\nexport function logoutSuccess() {\n    return { type: 'LOGOUT_SUCCESS' }\n};\n\n// THESE CREATORS MAKE ACTIONS FOR ASYNCHRONOUS TODO LIST UPDATES\nexport function createTodoList(todoList) {\n    return {\n        type: 'CREATE_TODO_LIST',\n        todoList\n    }\n}\nexport function createTodoListError(error) {\n    return {\n        type: 'CREATE_TODO_LIST_ERROR',\n        error\n    }\n}","import * as actionCreators from '../actions/actionCreators.js'\n\nexport const loginHandler = ({ credentials, firebase }) => (dispatch, getState) => {\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password,\n    ).then(() => {\n      console.log(\"LOGIN_SUCCESS\");\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n  };\n\nexport const logoutHandler = (firebase) => (dispatch, getState) => {\n    firebase.auth().signOut().then(() => {\n        dispatch(actionCreators.logoutSuccess);\n    });\n};\n\nexport const registerHandler = (newUser, firebase) => (dispatch, getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(\n        newUser.email,\n        newUser.password,\n    ).then(resp => firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: `${newUser.firstName[0]}${newUser.lastName[0]}`,\n        administrator : false,\n        wireframes : []\n    })).then(() => {\n        dispatch(actionCreators.registerSuccess);\n    }).catch((err) => {\n        dispatch(actionCreators.registerError);\n    }); \n};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { logoutHandler } from '../../store/database/asynchHandler'\r\n\r\nclass LogOutLink extends React.Component {\r\n\r\n  // As in SignIn.jsx we need to use a function that gets as an argument firebase object\r\n  handleLogout = () => {\r\n    const { firebase } = this.props;\r\n    this.props.signOut(firebase);\r\n  }\r\n\r\n  render() {\r\n    const { profile } = this.props;\r\n    return (\r\n      <ul>\r\n        <li><NavLink to=\"/\" onClick={this.handleLogout}>Log Out</NavLink></li>\r\n        <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{profile.initials}</NavLink></li>\r\n      </ul>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  signOut: firebase => dispatch(logoutHandler(firebase)),\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(null, mapDispatchToProps),\r\n)(LogOutLink);","import React from 'react';\r\nimport { NavItem } from 'react-materialize';\r\n\r\nclass LoginLink extends React.Component {\r\n  render() {\r\n    const onLoginPage = (window.location.href.includes(\"login\"));\r\n    console.log(onLoginPage);\r\n    return (\r\n      <ul className = \"right\" >\r\n        {!onLoginPage ? <li><NavItem href=\"/login\">Login</NavItem></li> : <li><NavItem href=\"/register\">Register</NavItem></li>}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginLink;","import React, { Component } from 'react'\r\nimport {Navbar, Icon, NavItem} from 'react-materialize'\r\nimport LogOutLink from './LogOutLink'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport LoginLink from './LoginLink';\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n       // Header needs to know if it's on the login page.\r\n        const {auth, profile } = this.props;\r\n        const links = auth.uid ? <LogOutLink profile={profile} /> : <LoginLink/>;\r\n        const isAdmin = profile.administrator;\r\n        return (\r\n            // Hard routing to the places with href, is this OK instead of using navlink? \r\n            <Navbar\r\n                alignLinks=\"right\"\r\n                brand={<NavLink to = \"/\" className=\"brand-logo center\">Wireframer</NavLink>}\r\n                menuIcon={<Icon>menu</Icon>}\r\n                center\r\n                options={{\r\n                draggable: true,\r\n                edge: 'left',\r\n                inDuration: 250,\r\n                onCloseEnd: null,\r\n                onCloseStart: null,\r\n                onOpenEnd: null,\r\n                onOpenStart: null,\r\n                outDuration: 200,\r\n                preventScrolling: true\r\n                }}\r\n            >\r\n            {isAdmin ?\r\n             <NavLink to = \"/databaseTester\">\r\n                  Database\r\n             </NavLink> : <p></p>\r\n            }\r\n            {links}\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.firebase.auth,\r\n  profile: state.firebase.profile,\r\n});\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps),\r\n)(Header);\r\n\r\n/*\r\n<div id = \"header\">\r\n                <a id=\"homeLink\" href=\"http://localhost:3000/\">Wireframer</a>\r\n                {true ? <LoginLink/> : false}\r\n                <a className=\"right\" href=\"http://localhost:3000/databaseTester\">Database Tester</a>\r\n            </div>\r\n            */\r\n","import React, { Component } from 'react'\r\nimport {TextInput, Button} from 'react-materialize'\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { loginHandler } from '../../store/database/asynchHandler'\r\n\r\nclass LoginScreen extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n      }\r\n    \r\n    handleChange = (e) => {\r\n        const { target } = e;\r\n    \r\n        this.setState(state => ({\r\n          ...state,\r\n          [target.id]: target.value,\r\n        }));\r\n      }\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // As we use react-redux-firebas-v3 we need to pass firebase object to\r\n        // authActions to be authorized by using firebse.auth method\r\n        const { props, state } = this;\r\n        const { firebase } = props;\r\n        const credentials = { ...state };\r\n        const authData = {\r\n          firebase,\r\n          credentials,\r\n        };\r\n        props.login(authData);\r\n      }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) {\r\n          return <Redirect to=\"/\" />;\r\n        }    \r\n        return (\r\n            <div>\r\n                <TextInput\r\n                    icon=\"email\"\r\n                    label=\"Email\"\r\n                    id = \"email\"\r\n                    onChange = {this.handleChange}\r\n                />\r\n                <TextInput\r\n                    icon=\"lock\"\r\n                    label=\"Password\"\r\n                    password\r\n                    id = \"password\"\r\n                    onChange = {this.handleChange}\r\n                />\r\n                  <Button\r\n                    node=\"button\"\r\n                    style={{\r\n                    marginRight: '5px'\r\n                    }}\r\n                    waves=\"light\"\r\n                    onClick = {this.handleSubmit}\r\n                >\r\n                    Login\r\n                </Button>\r\n                {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  });\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n    login: authData => dispatch(loginHandler(authData)),\r\n  });\r\n  \r\n  // We need firebaseConnect function to provide to this component\r\n  // firebase object with auth method.\r\n  // You can find more information on the link below\r\n  // http://docs.react-redux-firebase.com/history/v3.0.0/docs/auth.html\r\n  export default compose(\r\n    firebaseConnect(),\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n  )(LoginScreen);\r\n","import React, { Component } from 'react'\r\n\r\nexport default class WireframeOption extends Component {\r\n    render() {\r\n        return (\r\n            <option default key = {this.props.key}>{this.props.wireframe.name}</option>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Rnd} from 'react-rnd'\r\n\r\n\r\nexport default class LabelControl extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    state = {\r\n        control : this.props.control,\r\n        newPositionX : this.props.control.positionX,\r\n        newPositionY : this.props.control.positionY,\r\n    }\r\n    handleDragStop = (e, data) =>{\r\n        const control = this.state.control;\r\n        control.positionX = data.x;\r\n        control.positionY = data.y;\r\n    }\r\n    handleResizeStop = (e,dir, ref, delta, position) =>{\r\n        let widthChange = delta.width;\r\n        let heightChange = delta.height;\r\n        const control = this.props.control;\r\n        control.width = control.width + widthChange;\r\n        control.height = control.height + heightChange;\r\n        this.setState({});\r\n    }\r\n    render() {\r\n        const control = this.props.control;\r\n        const style = {\r\n            backgroundColor : control.backgroundColor,\r\n            borderWidth : control.borderThickness + \"px \" + control.borderThickness+\"px\",\r\n            borderRadius : control.borderRadius +\"px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: control.borderColor,\r\n            position : \"absolute\",\r\n            width : control.width +\"px\",\r\n            height : control.height + \"px\",\r\n            fontSize : control.textSize +\"px\",\r\n        }\r\n        return (\r\n            <Rnd\r\n            onDragStop = {this.handleDragStop}\r\n            onResizeStop = {this.handleResizeStop}\r\n            bounds = \"parent\"\r\n            default={{\r\n                x: control.positionX,\r\n                y: control.positionY,\r\n                width: style.width,\r\n                height: style.height,\r\n              }}\r\n        >\r\n            <div className = {this.props.theChosenControl ? \"box\" : \"\"} style = {{width : (parseInt(control.width) + 20) + \"px\", height: (parseInt(control.height)) +\"px\"}}>\r\n                <div className = \"labelControl\" style = {style} onClick = {(e)=>this.props.setControlBeingEdited(control.key,e)}>\r\n                {control.text}\r\n            </div>\r\n            </div>\r\n            </Rnd>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {TextInput} from 'react-materialize'\r\nimport {Rnd} from 'react-rnd'\r\n\r\n\r\nexport default class TextFieldControl extends Component {\r\n    state = {\r\n        control : this.props.control,\r\n        newPositionX : this.props.control.positionX,\r\n        newPositionY : this.props.control.positionY,\r\n    }\r\n    // This shows the data x / y relative to it's starting position. When saving, do current X - data.x, current Y - data.y to get the relative value\r\n    handleDragStop = (e, data) =>{\r\n        const control = this.state.control;\r\n        control.positionX = data.x;\r\n        control.positionY = data.y;\r\n    }\r\n    handleResizeStop = (e,dir, ref, delta, position) =>{\r\n        let widthChange = delta.width;\r\n        let heightChange = delta.height;\r\n        const control = this.props.control;\r\n        control.width = control.width + widthChange;\r\n        control.height = control.height + heightChange;\r\n        this.setState({});\r\n    }\r\n    render() {\r\n        const control = this.props.control;\r\n        const style = {\r\n            backgroundColor : control.backgroundColor,\r\n            borderWidth : control.borderThickness + \"px \" + control.borderThickness+\"px\",\r\n            borderRadius : control.borderRadius +\"px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: control.borderColor,\r\n            position: \"absolute\",\r\n            width : control.width +\"px\",\r\n            height : control.height + \"px\",\r\n            fontSize : control.textSize +\"px\",\r\n        }\r\n        return (\r\n            <Rnd\r\n            onDragStop = {this.handleDragStop}\r\n            onResizeStop = {this.handleResizeStop}\r\n            bounds = \"parent\"\r\n            default={{\r\n                x: control.positionX,\r\n                y: control.positionY,\r\n                width: style.width,\r\n                height: style.height,\r\n              }}\r\n        >\r\n            <div className = {this.props.theChosenControl ? \"box\" : \"\"} style = {{width : (parseInt(control.width) + 20) + \"px\", height: (parseInt(control.height)) +\"px\"}}>\r\n                <div className = \"textfieldControl\" style = {style} onClick = {(e)=>this.props.setControlBeingEdited(control.key,e)}>\r\n                <TextInput label={control.text}  disabled />\r\n                </div>\r\n            </div>\r\n            </Rnd>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Button} from 'react-materialize'\r\nimport {Rnd} from 'react-rnd'\r\nexport default class ButtonControl extends Component {\r\n    state = {\r\n        control : this.props.control,\r\n        newPositionX : this.props.control.positionX,\r\n        newPositionY : this.props.control.positionY,\r\n    }\r\n    handleDragStop = (e, data) =>{\r\n        const control = this.state.control;\r\n        control.positionX = data.x;\r\n        control.positionY = data.y;\r\n    }\r\n    handleResizeStop = (e,dir, ref, delta, position) =>{\r\n        let widthChange = delta.width;\r\n        let heightChange = delta.height;\r\n        const control = this.props.control;\r\n        control.width = control.width + widthChange;\r\n        control.height = control.height + heightChange;\r\n        this.setState({});;\r\n    }\r\n    render() {\r\n        const control = this.props.control;\r\n        const style = {\r\n            width : control.width +\"px\",\r\n            height : control.height + \"px\",\r\n            fontSize : control.textSize +\"px\",\r\n            backgroundColor : control.backgroundColor,\r\n            borderWidth : control.borderThickness + \"px \" + control.borderThickness+\"px\",\r\n            borderRadius : control.borderRadius +\"px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: control.borderColor,\r\n        }\r\n        return (\r\n            <Rnd\r\n            onDragStop = {this.handleDragStop}\r\n            onResizeStop = {this.handleResizeStop}\r\n            bounds = \"parent\"\r\n            default={{\r\n                x: control.positionX,\r\n                y: control.positionY,\r\n                width: style.width,\r\n                height: style.height,\r\n              }}\r\n        >   <div className = {this.props.theChosenControl ? \"box\" : \"\"} style = {{width : (parseInt(control.width) + 20) + \"px\", height: (parseInt(control.height)) +\"px\"}}>\r\n                <Button className = \"buttonControl\"\r\n                    node=\"a\"\r\n                    small\r\n                    style = {style} onClick = {(e)=>this.props.setControlBeingEdited(control.key,e)}\r\n                    waves=\"light\"\r\n                > {control.text}\r\n                </Button>\r\n            </div>\r\n            </Rnd>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Rnd} from 'react-rnd'\r\n\r\n\r\n// Have a control component that will read in a control and pass in one of these bad\r\n// boys based on their label. It should only get here if it\r\n// is a container.\r\nexport default class ContainerControl extends Component {\r\n    state = {\r\n        control : this.props.control,\r\n        // Save the new positions only if the save is clicked.\r\n        newPositionX : this.props.control.positionX,\r\n        newPositionY : this.props.control.positionY,\r\n    }\r\n    // Every control knows it's last possibly new positionX and Y.\r\n    handleDragStop = (e, data) =>{\r\n        const control = this.props.control;\r\n        control.positionX = data.x;\r\n        control.positionY = data.y;\r\n    }\r\n    handleResizeStop = (e,dir, ref, delta, position) =>{\r\n        let widthChange = delta.width;\r\n        let heightChange = delta.height;\r\n        const control = this.props.control;\r\n        control.width = control.width + widthChange;\r\n        control.height = control.height + heightChange;\r\n        this.setState({});\r\n    }\r\n    render() {\r\n        const control = this.props.control;\r\n        const style = {\r\n            backgroundColor : control.backgroundColor,\r\n            borderWidth : control.borderThickness + \"px \" + control.borderThickness+\"px\",\r\n            borderRadius : control.borderRadius +\"px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: control.borderColor,\r\n            position : \"absolute\",\r\n            width : control.width +\"px\",\r\n            height : control.height + \"px\",\r\n            fontSize : control.textSize +\"px\",\r\n        }\r\n        return (\r\n            <Rnd\r\n                onDragStop = {this.handleDragStop}\r\n                onResizeStop = {this.handleResizeStop}\r\n                bounds = \"parent\"\r\n                stop-propagation=\"true\"\r\n                default={{\r\n                    x: control.positionX,\r\n                    y: control.positionY,\r\n                    width: style.width,\r\n                    height: style.height,\r\n                  }}\r\n            >\r\n            <div className = {this.props.theChosenControl ? \"box\" : \"\"} style = {{width : (parseInt(control.width) + 20) + \"px\", height: (parseInt(control.height)) +\"px\"}}>\r\n                <div className = \"containerControl\" style = {style} onClick = {(e)=>this.props.setControlBeingEdited(control.key,e)}>{control.text}</div>\r\n            </div>\r\n            </Rnd>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport LabelControl from './LabelControl';\r\nimport TextFieldControl from './TextFieldControl';\r\nimport ButtonControl from './ButtonControl';\r\nimport ContainerControl from './ContainerControl';\r\n\r\nexport default class ControlGenerator extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    // If the control is default set to outside the bounds of the wireframe, it will show there at first and need to be snapped in.\r\n    // I dont know if I need to accoutn for this however, since the wireframe is to be made by the user, not loaded using a cfg.\r\n    render() {\r\n        //console.log(\"ControlGenerator Render called.\");\r\n        const control = this.props.control;\r\n        if (control.type === \"container\"){\r\n            return (\r\n                <ContainerControl control = {control} setControlBeingEdited = {this.props.setControlBeingEdited} theChosenControl = {this.props.theChosenControl}/>\r\n            )\r\n        }\r\n        if (control.type === \"label\"){\r\n            return (\r\n                <LabelControl control = {control} setControlBeingEdited = {this.props.setControlBeingEdited} theChosenControl = {this.props.theChosenControl}/>\r\n            )\r\n        }\r\n        if (control.type === \"button\"){\r\n            return (\r\n                <ButtonControl control = {control} setControlBeingEdited = {this.props.setControlBeingEdited} theChosenControl = {this.props.theChosenControl}/>\r\n            )\r\n        }\r\n        if (control.type === \"textfield\"){\r\n            return (\r\n                <TextFieldControl control = {control} setControlBeingEdited = {this.props.setControlBeingEdited} theChosenControl = {this.props.theChosenControl}/>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ControlGenerator from './controls/ControlGenerator';\r\nimport Button from 'react-materialize/lib/Button';\r\n\r\nexport default class EditArea extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    state = {\r\n        wireframe : this.props.wireframe,\r\n        controlBeingEdited : this.props.controlBeingEdited,\r\n        updatable : false,\r\n    }\r\n    updateDimensions = () =>{\r\n        let wireframe = this.props.wireframe;\r\n        let dimensionXinput = document.getElementById(\"dimensionXchange\");\r\n        let dimensionYinput = document.getElementById(\"dimensionYchange\");\r\n        let newDimensionX = parseInt(dimensionXinput.value);\r\n        let newDimensionY = parseInt(dimensionYinput.value);\r\n        // Capped at 1200 X and 1500 Y\r\n        if (newDimensionX > 5000 || newDimensionX < 1){\r\n            return;\r\n        }\r\n        if (newDimensionY > 5000 || newDimensionY < 1){\r\n            return;\r\n        }\r\n        wireframe.dimensionX = newDimensionX;\r\n        wireframe.dimensionY = newDimensionY;\r\n        this.setState({\r\n            wireframe : wireframe,\r\n            updatable : false,\r\n        })\r\n    }\r\n\r\n    makeUpdatable = () =>{\r\n        this.setState({\r\n            updatable : true,\r\n        })\r\n    }\r\n    // Bug occurs when changing the array and a KEY and TYPE matches between the old/new\r\n    render() {\r\n        const wireframe = this.props.wireframe;\r\n        //console.table(this.state.wireframe.controls);\r\n        const setControlBeingEdited = this.props.setControlBeingEdited;\r\n        const controlBeingEdited = this.props.controlBeingEdited;\r\n        //this.logicallyOrderControls();\r\n        // states not changing on load!!!!\r\n        //console.log(\"State wireframe : \" + this.state.wireframe.name);\r\n        //console.log(\"Props wireframe : \" + this.props.wireframe.name);\r\n        return (\r\n        <div id = \"editArea\">\r\n            {this.props.preview ? <div></div> : <div className = \"wireframeDetails\">\r\n                <p className = \"wireframeName\">{wireframe.name}</p>\r\n                <p>Width: </p>\r\n                <input className = \"numberInput\" type =\"number\" id =\"dimensionXchange\" defaultValue = {wireframe.dimensionX} onChange = {this.makeUpdatable}></input>\r\n                <p>Height: </p>\r\n                <input className = \"numberInput\" type =\"number\" id=\"dimensionYchange\" defaultValue = {wireframe.dimensionY} onChange = {this.makeUpdatable}></input>\r\n                <p><Button id = \"updateBtn\" onClick = {this.updateDimensions} disabled = {!this.state.updatable}>Update</Button></p>\r\n            </div>}\r\n            <div id = \"wireframeZone\" onClick = {(e)=>this.props.deselectControl(e)} className = \"normalZoom\" style = {{width : wireframe.dimensionX, height: wireframe.dimensionY}}>\r\n                    {this.props.wireframe.controls.map(function(control) { \r\n                        // If it's the control being edited, flag it to be \r\n                        return (\r\n                        <ControlGenerator control ={control} key = {control.key} setControlBeingEdited = {setControlBeingEdited} theChosenControl = {control === controlBeingEdited ? true : false} />\r\n                        );\r\n                    }\r\n                )}\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Select, Button, Icon, Modal} from 'react-materialize'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Redirect} from 'react-router-dom';\r\nimport { firestoreConnect} from 'react-redux-firebase';\r\nimport { getFirestore } from 'redux-firestore';\r\nimport WireframeOption from './WireframeOption';\r\nimport EditArea from '../edit_screen/EditArea';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nclass HomeScreen extends Component {\r\n    // I'd like to get a preview of the wireframe shown beneath when the option is selected.\r\n    // This doesn't move the most recently accessed to the top. Due to how the selector works. But this can be changed similar to HW3\r\n    state = {\r\n        usersWireframes : null,\r\n        moveToWireframe : null,\r\n        wireframeSelected : null,\r\n        refresh : false,\r\n    }\r\n    randomAdjectives = [\"Fluffy\",\"Pillow\",\"Plant\",\"Patience\",\"Night\",\"Homework\",\"Costco\",\"Salty\",\"Baboon\",\"Mirror\",\"BigFan\",\r\n                        \"Clock\",\"Water\",\"Doggo\",\"Tree\"]\r\n    getUsersWireframes(){\r\n        const {auth} = this.props;\r\n        const userID = auth.uid;\r\n        const firestore = getFirestore();\r\n        firestore.collection('users').doc(userID).get()\r\n        .then(doc =>\r\n            //console.log(doc.data().wireframes)\r\n            this.setState({\r\n                usersWireframes : doc.data().wireframes\r\n            })\r\n        )\r\n    }\r\n\r\n    handleNewWireframe = (e) =>{\r\n        const firestore = getFirestore();\r\n        const {auth} = this.props;\r\n        var userID= auth.uid;\r\n        const userWireframes = this.state.usersWireframes;\r\n        // If the name would be a duplicate, do something different.\r\n        let name = this.randomAdjectives[Math.floor(Math.random() * this.randomAdjectives.length)] + Math.floor(Math.random()*100) + Math.floor(Math.random()*100);\r\n        // Push the new wireframe then update the database.\r\n        userWireframes.push({\r\n            controls : [],\r\n            dimensionX : 1000,\r\n            dimensionY : 900,\r\n            name : name,\r\n            key : userWireframes.length,\r\n            lastAccessed : \"\"\r\n        })\r\n        firestore.collection(\"users\").doc(userID).update({\r\n            wireframes : userWireframes\r\n        })\r\n        // Update after adding.\r\n        toast(\"A new wireframe named \" + name + \" has been created.\");\r\n        this.setState({\r\n            wireframeSelected : userWireframes[userWireframes.length-1]\r\n        })\r\n    }\r\n\r\n    isDuplicateName(usersWireframes, name){\r\n        for (var i=0;i<usersWireframes.length;i++){\r\n            if (usersWireframes[i].name === name){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    getWireframeOfName(name){\r\n        const usersWireframes = this.state.usersWireframes;\r\n        for (var i=0;i<usersWireframes.length;i++){\r\n            if (usersWireframes[i].name === name){\r\n                return usersWireframes[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSelectChange = (e) =>{\r\n        let wireframeName = document.getElementById(\"wireframeSelector\").M_FormSelect.input.value;\r\n        let wireframeSelected = this.getWireframeOfName(wireframeName);\r\n        this.setState({\r\n            wireframeSelected : wireframeSelected\r\n        })\r\n    }\r\n    // Currently (The value of the the selector) goes by the name of the wireframe. \r\n    // This can be a problem if two wireframes have the same name.\r\n    // diff between let / const? const is global?\r\n\r\n    // So the idea is that this updates the state and in the render method theres a check where\r\n    // if there is a wireframe to move to, it'll move to it.\r\n    // IT'S ONLY GOING TO THE FIRST ONE\r\n    moveToWireframe = (e) =>{\r\n        const {auth} = this.props;\r\n        const userID = auth.uid;\r\n        const firestore = getFirestore();\r\n        let usersWireframes = this.state.usersWireframes;\r\n        let wireframe = this.state.wireframeSelected;\r\n        wireframe.lastAccessed = new Date().toISOString();\r\n        firestore.collection(\"users\").doc(userID).update({\r\n            wireframes : usersWireframes\r\n        })\r\n        this.setState({\r\n            moveToWireframe : wireframe,\r\n            mostRecentWireframe : wireframe,\r\n        })\r\n    }\r\n    // Same with this\r\n    deleteWireframe = (e) =>{\r\n        const usersWireframes = this.state.usersWireframes;\r\n        let wireframe = this.state.wireframeSelected;\r\n        let key = wireframe.key;\r\n        let indexToRemove = -1;\r\n        // Find what to remove and remove it.\r\n        for (var i=0;i<usersWireframes.length;i++){\r\n            if (usersWireframes[i].key === key){\r\n                indexToRemove = i;\r\n            }\r\n        }\r\n        usersWireframes.splice(indexToRemove, 1);\r\n        // Update the key of the remaining elements\r\n        for (i = indexToRemove; i<usersWireframes.length;i++){\r\n            usersWireframes[i].key = usersWireframes[i].key-1;\r\n        }\r\n        // update the database\r\n        const {auth} = this.props;\r\n        const userID = auth.uid;\r\n        const firestore = getFirestore();\r\n        firestore.collection('users').doc(userID).update({\r\n            wireframes : usersWireframes\r\n        })\r\n        toast(this.state.wireframeSelected.name + \" has been deleted.\")\r\n        this.setState({\r\n            wireframeSelected : null,\r\n            redirect : !this.state.redirect\r\n        });\r\n\r\n    }\r\n    reorderByAccessDate(wireframes){\r\n        wireframes.sort(function(item1,item2){\r\n            if (item1.lastAccessed > item2.lastAccessed){\r\n                console.log(item1.name + \" was accessed more recently than \" + item2.name);\r\n                return -1;\r\n            }\r\n            if (item1.lastAccessed < item2.lastAccessed){\r\n                return 1;\r\n            }\r\n            else{\r\n                return 0;\r\n            }\r\n        });\r\n        this.fixKeys(wireframes);\r\n    }\r\n    fixKeys(wireframes){\r\n        for (var i=0;i<wireframes.length;i++){\r\n            wireframes[i].key = i;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const moveToWireframe = this.state.moveToWireframe;\r\n        let usersWireframes = this.state.usersWireframes;\r\n        let wireframeSelected = this.state.wireframeSelected;\r\n        let EditAreaPreview = wireframeSelected != null ? <EditArea wireframe = {wireframeSelected} preview = {true}/> : <div></div>\r\n        if (this.state.refresh){\r\n            return <Redirect to='/' />\r\n        }\r\n        if (moveToWireframe != null){\r\n            return <Redirect to ={{pathname: \"/editScreen\", state : {wireframe : moveToWireframe, usersWireframes :this.state.usersWireframes}}}></Redirect>\r\n        }\r\n        const {auth} = this.props;\r\n        // Need to try to map each wireframe to an option.\r\n        // Need to disable the MOVE-TO button if there are no wireframes made yet.\r\n        if (auth.uid){\r\n            // At first the wireframes ar empty, call this method to fill them in\r\n            if (this.state.usersWireframes == null){\r\n                this.getUsersWireframes();\r\n                return <div></div>\r\n            }\r\n            this.reorderByAccessDate(usersWireframes);\r\n            return (\r\n                <div className = \"homeScreen\">\r\n                    <div className = \"centerPage\">\r\n                        <Select\r\n                        onChange = {(e)=>this.handleSelectChange(e)}\r\n                        defaultValue = {wireframeSelected != null ? wireframeSelected.name : \"\"}\r\n                        id = \"wireframeSelector\"\r\n                        options={{\r\n                            classes: '',\r\n                            dropdownOptions: {\r\n                            alignment: 'left',\r\n                            autoTrigger: true,\r\n                            closeOnClick: true,\r\n                            constrainWidth: true,\r\n                            container: null,\r\n                            coverTrigger: true,\r\n                            hover: false,\r\n                            inDuration: 150,\r\n                            onCloseEnd: null,\r\n                            onCloseStart: null,\r\n                            onOpenEnd: null,\r\n                            onOpenStart: null,\r\n                            outDuration: 250,\r\n                            }\r\n                        }}\r\n                        >\r\n                        <option value ={false}>Select a Wireframe</option>\r\n                        {usersWireframes.map(wireframe => (\r\n                            <WireframeOption wireframe = {wireframe} key = {wireframe.key}></WireframeOption>\r\n                        ))\r\n                        }\r\n                        </Select>\r\n                        {this.state.wireframeSelected != null ? <div className = \"selectedNotification\">\r\n                            You have selected {wireframeSelected.name}\r\n                        </div> : <div>You have not selected a wireframe yet.</div>}\r\n\r\n                        <div className = \"wireframeOptions\">\r\n                        <Button\r\n                            node=\"button\"\r\n                            type=\"submit\"\r\n                            waves=\"light\"\r\n                            disabled = {wireframeSelected == null ? true : false}\r\n                            onClick = {(e)=>this.moveToWireframe(e)}\r\n                            >\r\n                            Move to {wireframeSelected != null ? wireframeSelected.name : \"wireframe\"}\r\n                            <Icon right>\r\n                                send\r\n                            </Icon>\r\n                            </Button>\r\n                        <Modal header=\"Delete Wireframe\" trigger={\r\n                            <Button disabled = {wireframeSelected == null ? true : false} className =\"deleteWireframeBtn\" waves=\"red\" style={{marginRight: '5px'}}>\r\n                                Delete {wireframeSelected != null ? wireframeSelected.name : \"wireframe\"}\r\n                            </Button>\r\n                        }\r\n                            actions = {[<Button className = \"modal-close\" flat> Close </Button>, <Button flat className = \"modal-close\" onClick = {(e)=>this.deleteWireframe(e)}>Confirm</Button>]}> \r\n                            <p>Are you sure you want to delete {wireframeSelected != null ? wireframeSelected.name : \"this wireframe\"}? </p>\r\n                            <p><b>This action is irreversible.</b></p>\r\n                        </Modal>\r\n                        </div>\r\n                        <Button\r\n                            node=\"button\"\r\n                            type=\"submit\"\r\n                            waves=\"light\"\r\n                            className = \"createNewWireframeBtn\"\r\n                            onClick = {this.handleNewWireframe}\r\n                            >\r\n                            Create a new wireframe!\r\n                        </Button>\r\n                    </div>\r\n                    <div className = \"preview\">{wireframeSelected != null ? \"Preview of \" + wireframeSelected.name : \"\"}</div>\r\n                    <div className = \"wireframePreview\" disabled><div className = \"center\">{EditAreaPreview}</div></div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return <div></div>\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n      { collection: 'wireframes' },\r\n    ]),\r\n)(HomeScreen);","import React, { Component } from 'react'\r\nimport {TextInput, Button} from 'react-materialize'\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { registerHandler } from '../../store/database/asynchHandler'\r\n\r\nclass RegisterScreen extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n      }    \r\n    handleChange = (e) => {\r\n    const { target } = e;\r\n    this.setState(state => ({\r\n        ...state,\r\n        [target.id]: target.value,\r\n    }));\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { props, state } = this;\r\n    const { firebase } = props;\r\n    const newUser = { ...state };\r\n\r\n    props.register(newUser, firebase);\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        return (\r\n            <div>\r\n                 <TextInput\r\n                    icon=\"email\"\r\n                    label=\"Email\"\r\n                    id = \"email\"\r\n                    onChange = {this.handleChange}\r\n                />\r\n                <TextInput\r\n                    icon=\"lock\"\r\n                    label=\"Password\"\r\n                    id = \"password\"\r\n                    password\r\n                    onChange = {this.handleChange}\r\n                />\r\n                <TextInput\r\n                    icon=\"person_pin\"\r\n                    label=\"First Name\"\r\n                    id = \"firstName\"\r\n                    onChange = {this.handleChange}\r\n                />\r\n                <TextInput\r\n                    icon=\"person_pin\"\r\n                    label=\"Last Name\"\r\n                    id = \"lastName\"\r\n                    onChange = {this.handleChange}\r\n                />\r\n                  <Button\r\n                    node=\"button\"\r\n                    style={{\r\n                    marginRight: '5px'\r\n                    }}\r\n                    waves=\"light\"\r\n                    onClick = {(e)=>this.handleSubmit(e)}\r\n                >\r\n                    Register\r\n                </Button>\r\n                {authError ? <div className=\"red-text center\"><p>{authError}</p></div> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  });\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n    register: (newUser, firebase) => dispatch(registerHandler(newUser, firebase)),\r\n  });\r\n  \r\n  export default compose(\r\n    firebaseConnect(),\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n  )(RegisterScreen);","import React, { Component } from 'react'\r\nimport {TextInput} from 'react-materialize'\r\n//https://casesandberg.github.io/react-color/  --v\r\nimport { SliderPicker } from 'react-color';\r\nimport { getFirestore } from 'redux-firestore';\r\nimport Button from 'react-materialize/lib/Button';\r\n\r\n\r\n\r\n// Need access to user's ID and the wireframe this is coming from\r\nexport default class PropertyEditor extends Component {\r\n    state = {\r\n        control : this.props.controlToEdit\r\n    }\r\n\r\n    // Once map state to props is working, set state won't be necessary and I can just update the database.\r\n    // Maybe add the option to wipe background color.\r\n    handleChange = (e) => {\r\n        if (this.props.controlToEdit === null){\r\n            return;\r\n        }\r\n        const {target} = e;\r\n        const control = this.props.controlToEdit;\r\n        if (target.id === \"controlText\"){\r\n            control.text = target.value;\r\n            this.props.handlePropertyChange();\r\n            this.setState({\r\n                control: control\r\n            })\r\n        }\r\n        if (target.id === \"controlTextSize\"){\r\n            control.textSize = target.value;\r\n            this.props.handlePropertyChange();\r\n            this.setState({\r\n                control: control\r\n            })\r\n        }\r\n        if (target.id === \"controlBorderThickness\"){\r\n            control.borderThickness = target.value;\r\n            this.props.handlePropertyChange();\r\n            this.setState({\r\n                control: control\r\n            })\r\n        }\r\n        if (target.id === \"controlBorderRadius\"){\r\n            control.borderRadius= target.value;\r\n            this.props.handlePropertyChange();\r\n            this.setState({\r\n                control: control\r\n            })\r\n        }\r\n    }\r\n    handleBackgroundColorChange = (color) =>{\r\n        if (this.props.controlToEdit === null){\r\n            return;\r\n        }\r\n        const control = this.props.controlToEdit;\r\n        if (color.hex === undefined){\r\n            control.backgroundColor = \"#FFFFFF\"\r\n        }else{\r\n            control.backgroundColor = color.hex;\r\n        }\r\n        this.props.handlePropertyChange();\r\n        this.setState({\r\n            control : control\r\n        })\r\n    }\r\n    handleBorderColorChange = (color) =>{\r\n        if (this.props.controlToEdit === null){\r\n            return;\r\n        }\r\n        const control = this.props.controlToEdit;\r\n        control.borderColor = color.hex;\r\n        this.props.handlePropertyChange();\r\n        this.setState({\r\n            control : control\r\n        })\r\n    }\r\n\r\n    setWhiteBackground = ()=>{\r\n        this.handleBackgroundColorChange(\"#FFFFFF\");\r\n    }\r\n    render() {\r\n        //console.log(\"PropertyEditor Render called.\");\r\n        const control = this.props.controlToEdit;\r\n        const controlSelected = (this.props.controlToEdit != null);\r\n        return (\r\n            <div className =\"propertyEditor\">\r\n                Properties\r\n                <TextInput placeholder=\"Control Text\" value = {controlSelected ? control.text : \"\"} id=\"controlText\" onChange={this.handleChange}/>\r\n                <div className =\"property\">\r\n                Font-size: \r\n                <TextInput type = \"number\" value = {controlSelected ? control.textSize : 0} id = \"controlTextSize\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className =\"property\">\r\n                Background:\r\n                <SliderPicker color = {controlSelected ? control.backgroundColor : \"white\"} id = \"backgroundColor\" onChange={this.handleBackgroundColorChange}/>\r\n                <Button className = \"backgroundClearBtn\" flat onClick = {this.setWhiteBackground}>Clear</Button>\r\n                </div>\r\n                <div className =\"property\">\r\n                Border Color:\r\n                <SliderPicker color = {controlSelected ? control.borderColor : \"black\"} id = \"borderColor\" onChange={this.handleBorderColorChange}/>\r\n                </div>\r\n                <div className =\"property\">\r\n                Border Thickness: \r\n                <TextInput type = \"number\" placeholder=\"Thickness\" value = {controlSelected ? control.borderThickness : 0} id = \"controlBorderThickness\" onChange={this.handleChange}/>\r\n                </div>\r\n                <div className =\"property\">\r\n                Border Radius: \r\n                <TextInput type = \"number\" placeholder=\"Radius\" value = {controlSelected ? control.borderRadius : 0} id = \"controlBorderRadius\" onChange={this.handleChange}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Icon, Button, TextInput} from 'react-materialize'\r\nimport { Redirect} from 'react-router-dom';\r\n\r\n\r\nexport default class ControlSelection extends Component {\r\n    state = {\r\n        closing : false\r\n    }\r\n    // Sets the state and indicates this needs to be closed.\r\n    closeWireframe = (e) =>{\r\n        this.setState({\r\n            closing : true\r\n        })\r\n    }\r\n    zoomIn = () =>{\r\n        const wireframeZone = document.getElementById(\"wireframeZone\");\r\n        let className = wireframeZone.getAttribute(\"class\");\r\n        if (className === \"normalZoom\"){\r\n            wireframeZone.setAttribute(\"class\", \"doubleZoom\");\r\n        }\r\n        // If it's at half, make it normal\r\n        if (className === \"halfZoom\"){\r\n            wireframeZone.setAttribute(\"class\", \"normalZoom\");\r\n        }\r\n    }\r\n    zoomOut = () =>{\r\n        const wireframeZone = document.getElementById(\"wireframeZone\");\r\n        let className = wireframeZone.getAttribute(\"class\");\r\n        if (className === \"normalZoom\"){\r\n            wireframeZone.setAttribute(\"class\", \"halfZoom\");\r\n        }\r\n        // If it's at half, make it normal\r\n        if (className === \"doubleZoom\"){\r\n            wireframeZone.setAttribute(\"class\", \"normalZoom\");\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.closing){\r\n            return <Redirect to=\"/\"></Redirect>\r\n        }\r\n        return (\r\n            <div>\r\n                <div className = \"controlsRow1\">\r\n                    <Button\r\n                        large\r\n                        flat\r\n                        node=\"button\"\r\n                        waves=\"light\"\r\n                        onClick = {this.zoomIn}\r\n                    >\r\n                        <Icon small>\r\n                        zoom_in\r\n                        </Icon>\r\n                    </Button>\r\n                    <Button\r\n                        large\r\n                        flat\r\n                        node=\"button\"\r\n                        waves=\"light\"\r\n                        onClick = {this.zoomOut}\r\n                    >\r\n                        <Icon small>\r\n                        zoom_out\r\n                        </Icon>\r\n                    </Button>\r\n                    <Button\r\n                        large\r\n                        flat\r\n                        node=\"button\"\r\n                        waves=\"light\"\r\n                        onClick = {(e)=>this.props.saveData(e)}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                    <Button\r\n                        large\r\n                        flat\r\n                        node=\"button\"\r\n                        waves=\"light\"\r\n                        onClick = {(e)=>this.closeWireframe(e)}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </div>\r\n                <div className =\"controlsRow2\"> \r\n                    <div className=\"controlOption\">\r\n                        <div className = \"containerControlOption\" onClick={(e)=>this.props.createNewControl(e)}></div>\r\n                        Container \r\n                    </div>\r\n                    <div className=\"controlOption\">\r\n                        <div className = \"labelControlOption\" onClick={(e)=>this.props.createNewControl(e)}> Prompt for Input</div>\r\n                        Label\r\n                    </div>\r\n                    <div className=\"controlOption\">\r\n                        <div className = \"buttonControlOption\">  \r\n                        <Button\r\n                            node=\"a\"\r\n                            small\r\n                            style={{\r\n                            marginRight: '5px'\r\n                            }}\r\n                            waves=\"light\"\r\n                            // Had to put it in here, the button is an exception.\r\n                            onClick={(e)=>this.props.createNewControl(e)}\r\n                        > Submit\r\n                        </Button>\r\n                    </div>\r\n                    Button\r\n                    </div>\r\n                    <div className=\"controlOption\">\r\n                        <div className = \"textFieldControlOption\" onClick={(e)=>this.props.createNewControl(e)}>\r\n                            <TextInput className = \"textFieldControlOption\" disabled label=\"Input\"/>\r\n                        </div>\r\n                    </div>\r\n                    Textfield\r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropertyEditor from './PropertyEditor'\r\nimport ControlSelection from './ControlSelection'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { getFirestore } from 'redux-firestore';\r\nimport EditArea from './EditArea';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Redirect} from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n// EditScreen must be able to know which wireframe it's working on within the total wireframe array such that\r\n// it can update / delete it. I'll probably have to do this by working around with the keys. Maybe pass the key and all the wireframes down as a prop.\r\n// Maybe theres a more efficient way.\r\n\r\nclass EditScreen extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        // SCUFFED\r\n        if (this.props.location.state !== undefined){\r\n            this.state = {\r\n                wireframe : this.props.location.state.wireframe,\r\n                controlBeingEdited : null\r\n            }\r\n        }\r\n        \r\n        document.body.onkeydown = (e) => {\r\n            if (e.ctrlKey){\r\n                if (this.state.controlBeingEdited != null){\r\n                    if (e.keyCode === 68){\r\n                        this.duplicateControl(this.state.controlBeingEdited);\r\n                    }\r\n                }\r\n            }\r\n            else if(e.keyCode === 46){\r\n                this.removeControl(this.state.controlBeingEdited);  \r\n            }\r\n        }\r\n    } \r\n\r\n\r\n\r\n    duplicateControl(controlToDuplicate){\r\n        const controls = this.state.wireframe.controls;\r\n        let controlCopy = Object.assign({}, controlToDuplicate);\r\n        controlCopy.key = controls.length;\r\n        controlCopy.positionX = controlToDuplicate.positionX + 100;\r\n        controlCopy.positionY = controlToDuplicate.positionY + 100;\r\n        controls.push(controlCopy);\r\n        this.setState({});\r\n    }\r\n    removeControl(controlToRemove){\r\n        const controls = this.state.wireframe.controls;\r\n        controls.splice(controlToRemove.key, 1);\r\n        // Update the key of the remaining elements\r\n        for (var i = controlToRemove.key; i<controls.length;i++){\r\n            controls[i].key = controls[i].key-1;\r\n        }\r\n        // reload after deleting\r\n        this.setState({\r\n        \r\n        })\r\n    }\r\n\r\n\r\n    saveData = (e) =>{\r\n        // UPDATE IN THE FIRESTORE AS WELL\r\n        const firestore = getFirestore();\r\n        // Save the updated controls\r\n        const wireframe = this.state.wireframe;\r\n        const {auth} = this.props;\r\n        var userID= auth.uid;\r\n        const usersWireframes = this.props.location.state.usersWireframes;\r\n        usersWireframes[wireframe.key] = wireframe;\r\n        firestore.collection(\"users\").doc(userID).update({\r\n            wireframes : usersWireframes\r\n        })\r\n        toast(\"The wireframe has been saved.\");\r\n    }\r\n    // Takes in the control's key, which should match the index of the array\r\n    // This key thing depends on the key matching the index of the array, is that reliable?\r\n    setControlBeingEdited = (key,e) =>{\r\n        e.preventDefault();\r\n        let controlBeingEdited = this.state.wireframe.controls[key];\r\n        this.setState({\r\n            ...this.state,\r\n            controlBeingEdited : controlBeingEdited\r\n        })\r\n    }\r\n    deselectControl = (e) =>{\r\n        if (e.target.id === \"wireframeZone\"){\r\n            this.setState({\r\n                controlBeingEdited : null\r\n            })\r\n        }\r\n    }\r\n    handlePropertyChange = (e)=>{\r\n        // Reload this on property change, might be inefficient. Look for a better way.\r\n        this.setState({\r\n            \r\n        })\r\n    }\r\n    // Methods to be sent to and triggered by the ControlSelection\r\n    createNewControl = (e) =>{\r\n        const type = e.target.className;\r\n        // This should never happen, since this page is loaded with a wireframe.\r\n        if (this.state.wireframe == null){\r\n            return;\r\n        }\r\n        let wireframeControls = this.state.wireframe.controls;\r\n        switch(type){\r\n            // Create default container\r\n            case 'containerControlOption':\r\n                wireframeControls.push({\r\n                    key : wireframeControls.length,\r\n                    positionX : 0,\r\n                    positionY: 0,\r\n                    width : 200,\r\n                    height : 100,\r\n                    text : \"\",\r\n                    textSize : 50,\r\n                    backgroundColor : \"#FFFFFF\",\r\n                    borderColor : \"#000000\",\r\n                    borderThickness : 5,\r\n                    borderRadius : 2,\r\n                    type : \"container\"\r\n                })\r\n                break;\r\n            // Default label\r\n            case 'labelControlOption':\r\n                    wireframeControls.push({\r\n                        key : wireframeControls.length,\r\n                        className : \"labelControl\",\r\n                        positionX : 0,\r\n                        positionY: 0,\r\n                        width: 200,\r\n                        height: 50,\r\n                        text : \"Prompt for Input\",\r\n                        textSize : 20,\r\n                        backgroundColor : \"#FFFFFF\",\r\n                        borderColor : \"#000000\",\r\n                        borderThickness : 0,\r\n                        borderRadius : 1,\r\n                        type : \"label\"\r\n                    })\r\n                    break;\r\n            // Default button\r\n            case 'waves-effect waves-light btn-small':\r\n                    wireframeControls.push({\r\n                        key : wireframeControls.length,\r\n                        className : \"buttonControl\",\r\n                        positionX : 0,\r\n                        positionY: 0,\r\n                        width: 92,\r\n                        height: 32,\r\n                        text : \"Submit\",\r\n                        textSize : 16,\r\n                        backgroundColor : \"#26a69a\",\r\n                        borderColor : \"#000000\",\r\n                        borderThickness : 0,\r\n                        borderRadius : 0,\r\n                        type : \"button\"\r\n                    })\r\n                    break;\r\n            // Default text field\r\n            case 'textFieldControlOption':\r\n                wireframeControls.push({\r\n                    key : wireframeControls.length,\r\n                    className : \"textfieldControl\",\r\n                    positionX : 0,\r\n                    positionY: 0,\r\n                    width: 200,\r\n                    height: 100,\r\n                    text : \"Input\",\r\n                    textSize : 16,\r\n                    backgroundColor : \"#FFFFFF\",\r\n                    borderColor : \"#000000\",\r\n                    borderThickness : 1,\r\n                    borderRadius : 0,\r\n                    type : \"textfield\"\r\n                })\r\n                break;\r\n            default:\r\n        }\r\n        // Update after adding, shouldn't this be automatic?\r\n        this.setState({\r\n            \r\n        })\r\n    }\r\n    // Working towards getting the delete control\r\n    deleteControl = (e) =>{\r\n        const controls = this.state.wireframe.controls;\r\n        controls.remove(this.state.controlBeingEdited);\r\n    }\r\n\r\n    // The PropertyEditor only needs to know what control it's working on.\r\n    // The editAreaDiv needs to know the entire wireframe\r\n    // The controlSelection doesn't need to know shit\r\n    render() {\r\n        //console.log(\"EditScreen Render called.\");\r\n        if (this.state == null){\r\n            return <Redirect to = \"/\"></Redirect>\r\n        }\r\n        return (\r\n            <div id = \"editScreenParent\">\r\n                <div id = \"controlSelectionDiv\" className =\"editScreenDiv\"><ControlSelection createNewControl = {this.createNewControl} saveData = {this.saveData}/></div>\r\n                <div id = \"propertyEditorDiv\" className =\"editScreenDiv\">\r\n                    {this.state.wireframe == null ? <PropertyEditor\r\n                    /> :\r\n                    <PropertyEditor\r\n                        controlToEdit = {this.state.controlBeingEdited}\r\n                        handlePropertyChange = {this.handlePropertyChange}\r\n                    />\r\n                    }\r\n                </div>\r\n                <div id = \"editAreaDiv\" className =\"editScreenDiv\"><EditArea wireframe = {this.state.wireframe} controlBeingEdited = {this.state.controlBeingEdited} setControlBeingEdited = {this.setControlBeingEdited} deselectControl = {this.deselectControl}/></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n      { collection: 'todoLists' },\r\n    ]),\r\n)(EditScreen);","import React from 'react';\nimport './css/App.css';\nimport './css/layout.css';\nimport './css/styles.css'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { firebaseConnect } from 'react-redux-firebase';\nimport DatabaseTester from './test/DatabaseTester';\nimport Header from './components/header/Header';\nimport LoginScreen from './components/login_screen/LoginScreen';\nimport HomeScreen from './components/home_screen/HomeScreen';\nimport RegisterScreen from './components/register_screen/RegisterScreen';\nimport EditScreen from './components/edit_screen/EditScreen';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nfunction App() {\n  //const { auth } = this.props;\n  //if (auth.isLoaded){\n    return (\n      <BrowserRouter>\n        <div className = \"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={HomeScreen} />\n          <Route path=\"/databaseTester\" component={DatabaseTester} />\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/editScreen\" component={EditScreen} />\n          <Route path=\"/:any\" component={HomeScreen} />\n        </Switch>\n        </div>\n      </BrowserRouter>\n    );\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n});\n\n//Need to get\nexport default compose(\n  firebaseConnect(),\n  connect(mapStateToProps),\n)(App);\n // Into working condition, such that the website is reloaded upon database change.\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// THIS IS USED TO INITIALIZE THE firebase OBJECT\r\n// PUT YOUR FIREBASE PROJECT CONFIG STUFF HERE\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBcA8HkDyfxfg9_13fPa-qWW5lTDnLnGLQ\",\r\n    authDomain: \"wireframer-41732.firebaseapp.com\",\r\n    databaseURL: \"https://wireframer-41732.firebaseio.com\",\r\n    projectId: \"wireframer-41732\",\r\n    storageBucket: \"wireframer-41732.appspot.com\",\r\n    messagingSenderId: \"105065243096\",\r\n    appId: \"1:105065243096:web:df1296bef069f9b04192ad\",\r\n    measurementId: \"G-LQXQ86V256\"\r\n  };\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// NOW THE firebase OBJECT CAN BE CONNECTED TO THE STORE\r\nexport default firebase;","import * as actionCreators from '../actions/actionCreators'\n\n// REDUCERS ARE CALLED WHEN AN ACTION IS DISPATCHED,\n// THEIR JOB IS TO ADVANCE THE STATE. THEY WILL UPDATE\n// AND RETURN THE NEW, UPDATED STATE\n\nconst initState = {};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case actionCreators.LOGIN_ERROR:\n      return {\n        ...state,\n        authError: 'Login fail',\n      };\n    case actionCreators.LOGIN_SUCCESS:\n      return {\n        ...state,\n        authError: null,\n      };\n    case actionCreators.LOGOUT_SUCCESS:\n      return state;\n    case actionCreators.REGISTER_SUCCESS:\n      return {\n        ...state,\n        authError: null,\n      };\n    case actionCreators.REGISTER_ERROR:\n      return {\n        ...state,\n        authError: action.err.message,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","const initState = {\n    todoLists: []\n};\n\nconst todoListReducer = (state = initState, action) => {\n    switch (action.type) {\n        /* IF YOU HAVE ANY TODO LIST EDITING REDUCERS ADD THEM HERE */ \n        default:\n            return state;\n    }\n};\n\nexport default todoListReducer;","import { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore'; // syncing firestore\nimport { firebaseReducer } from 'react-redux-firebase';\nimport authReducer from './authReducer';\nimport todoListReducer from './todoListReducer';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  todoList: todoListReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n});\n\nexport default rootReducer;","/* eslint-disable no-underscore-dangle */\nimport React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport firebase from '../config/firebaseConfig';\nimport rootReducer from './reducers/rootReducer';\nimport App from '../App';\n\nclass ReactReduxFirebaseApp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // We enhance compose in order to use Redux DevTools extension\n        // https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\n        const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n        // Create config for rrfProps object. We need this to pass it in the ReactReduxFirebaseProvider component\n        const rrfConfig = {\n            useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n            userProfile: 'users',\n            attachAuthIsReady: true,\n        };\n\n        const store = createStore(rootReducer,\n            composeEnhancers(\n                applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n                reduxFirestore(firebase), // still need this line to get access to firestore via getFirestore function (in projectActions, for example)\n            )\n        );\n\n        const rrfProps = {\n            firebase,\n            config: rrfConfig,\n            dispatch: store.dispatch,\n            createFirestoreInstance, // Create firestore instead of craete it in fbConfig.js\n        };\n\n        this.state = {\n            store: store,\n            rrfProps: rrfProps\n        }\n    }\n\n    render() {\n        return (\n            <Provider store={this.state.store}>\n                <ReactReduxFirebaseProvider {...this.state.rrfProps}>\n                    <App />\n                </ReactReduxFirebaseProvider>\n            </Provider>\n        )\n    }\n}\n\nexport default ReactReduxFirebaseApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ReactReduxFirebaseApp from './store/ReactReduxFirebaseApp'\n\nReactDOM.render(\n    <ReactReduxFirebaseApp />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}